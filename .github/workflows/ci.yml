name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-go-servers:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build app-backend
      run: |
        cd app-backend
        go mod tidy
        go build -v ./...
        go test -v ./...
    
    - name: Build notification-backend
      run: |
        cd notification-backend
        go mod tidy
        go build -v ./...
        go test -v ./...
    
    - name: Run encryption tests
      run: |
        cd notification-backend
        go test -v -run TestEncryption

  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: '34.0.0'
        ndk-version: '25.1.8937393'
    
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x android-fcm-app/gradlew
    
    - name: Build Android app
      run: |
        cd android-fcm-app
        ./gradlew build
    
    - name: Run Android unit tests
      run: |
        cd android-fcm-app
        ./gradlew test

  lint-and-security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: app-backend
    
    - name: Run golangci-lint for notification-backend
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: notification-backend
    
    - name: Run gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: './app-backend/... ./notification-backend/...'
